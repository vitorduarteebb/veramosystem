# Configurações para integração com Google Meet
# Copie este arquivo para .env e preencha com suas credenciais

# =============================================================================
# GOOGLE WORKSPACE API - CREDENCIAIS DE SERVIÇO
# =============================================================================

# Opção 1: Arquivo de credenciais JSON
# Baixe o arquivo de credenciais da conta de serviço no Google Cloud Console
# e especifique o caminho completo aqui
GOOGLE_CREDENTIALS_FILE=/path/to/your/service-account-key.json

# Opção 2: Credenciais em variável de ambiente (recomendado para produção)
# Cole o conteúdo JSON do arquivo de credenciais aqui
# GOOGLE_SERVICE_ACCOUNT_INFO={"type":"service_account","project_id":"...","private_key_id":"...","private_key":"...","client_email":"...","client_id":"...","auth_uri":"...","token_uri":"...","auth_provider_x509_cert_url":"...","client_x509_cert_url":"..."}

# ID do projeto no Google Cloud
GOOGLE_CLOUD_PROJECT_ID=your-project-id

# Email da conta de serviço
GOOGLE_SERVICE_ACCOUNT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com

# =============================================================================
# CONFIGURAÇÕES DO GOOGLE MEET
# =============================================================================

# Fuso horário padrão para as reuniões
GOOGLE_MEET_TIMEZONE=America/Sao_Paulo

# Duração padrão da reunião em minutos
GOOGLE_MEET_DEFAULT_DURATION=60

# Habilitar gravação automática (true/false)
GOOGLE_MEET_AUTO_RECORDING=false

# Habilitar transcrição automática (true/false)
GOOGLE_MEET_AUTO_TRANSCRIPTION=false

# =============================================================================
# CONFIGURAÇÕES DE SEGURANÇA
# =============================================================================

# Domínios permitidos para participantes (separados por vírgula)
# Deixe vazio para permitir todos os domínios
GOOGLE_MEET_ALLOWED_DOMAINS=

# Habilitar logs de segurança (true/false)
GOOGLE_MEET_SECURITY_LOGGING=true

# Rate limiting - máximo de reuniões por hora
GOOGLE_MEET_MAX_PER_HOUR=10

# Rate limiting - máximo de reuniões por dia
GOOGLE_MEET_MAX_PER_DAY=50

# =============================================================================
# CONFIGURAÇÕES DE CACHE
# =============================================================================

# Cache das credenciais em segundos
GOOGLE_MEET_CREDENTIALS_CACHE_TTL=3600

# Cache das informações da reunião em segundos
GOOGLE_MEET_MEETING_CACHE_TTL=1800

# =============================================================================
# CONFIGURAÇÕES DE LOGGING
# =============================================================================

# Nível de log (DEBUG, INFO, WARNING, ERROR)
GOOGLE_MEET_LOG_LEVEL=INFO

# Habilitar logs de auditoria (true/false)
GOOGLE_MEET_AUDIT_LOGGING=true

# =============================================================================
# INSTRUÇÕES DE CONFIGURAÇÃO
# =============================================================================

# 1. Acesse o Google Cloud Console: https://console.cloud.google.com/
# 2. Crie um novo projeto ou selecione um existente
# 3. Habilite as seguintes APIs:
#    - Google Calendar API
#    - Google Meet API
#    - Google Workspace Events API
# 4. Crie uma conta de serviço:
#    - Vá para "IAM & Admin" > "Service Accounts"
#    - Clique em "Create Service Account"
#    - Dê um nome e descrição
#    - Atribua as seguintes roles:
#      * Calendar API Admin
#      * Service Account Token Creator
# 5. Crie uma chave para a conta de serviço:
#    - Clique na conta de serviço criada
#    - Vá para a aba "Keys"
#    - Clique em "Add Key" > "Create new key"
#    - Escolha "JSON" e baixe o arquivo
# 6. Configure as variáveis de ambiente acima
# 7. Reinicie o servidor Django

# =============================================================================
# VERIFICAÇÃO DA CONFIGURAÇÃO
# =============================================================================

# Para verificar se a configuração está correta, execute:
# python manage.py shell
# from core.services.google_meet_service import GoogleMeetService
# service = GoogleMeetService()
# print("Configuração do Google Meet OK!")

# =============================================================================
# SOLUÇÃO DE PROBLEMAS
# =============================================================================

# Erro: "Service account does not have access to calendar"
# Solução: Verifique se a conta de serviço tem acesso ao calendário principal
# - Vá para Google Calendar
# - Clique nas configurações do calendário
# - Adicione o email da conta de serviço com permissões de "Make changes to events"

# Erro: "Invalid credentials"
# Solução: Verifique se o arquivo de credenciais está correto e acessível

# Erro: "Quota exceeded"
# Solução: Verifique os limites da API no Google Cloud Console
